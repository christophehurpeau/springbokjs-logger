{"version":3,"sources":["../src/config.js"],"names":["Minimatch","global","__NIGHTINGALE_CONFIG","__NIGHTINGALE_GLOBAL_PROCESSORS","__NIGHTINGALE_GLOBAL_HANDLERS","__NIGHTINGALE_LOGGER_MAP_CACHE","Map","__NIGHTINGALE_CONFIG_DEFAULT","handlers","processors","clearCache","clear","handleConfig","config","key","patterns","Error","pattern","handler","minimatchPatterns","map","configure","length","console","log","reverse","forEach","push","addConfig","unshift","addGlobalProcessor","processor","addGlobalHandler","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER","globalProcessors","globalHandlers","globalCache","has","get","value","find","c","some","p","match","loggerConfig","concat","set"],"mappings":"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","file":"config.js","sourcesContent":["import { Minimatch } from 'minimatch';\n\ntype Config = {\n  pattern: ?string,\n  patterns: ?Array<string>,\n  handler: ?Object,\n  handlers: ?Array<Object>,\n}\n\nif (!global.__NIGHTINGALE_CONFIG) {\n  global.__NIGHTINGALE_CONFIG = [];\n  global.__NIGHTINGALE_GLOBAL_PROCESSORS = [];\n  global.__NIGHTINGALE_GLOBAL_HANDLERS = [];\n  global.__NIGHTINGALE_LOGGER_MAP_CACHE = new Map();\n  global.__NIGHTINGALE_CONFIG_DEFAULT = {\n    handlers: [],\n    processors: [],\n  };\n}\n\nfunction clearCache() {\n  global.__NIGHTINGALE_LOGGER_MAP_CACHE.clear();\n}\n\nfunction handleConfig(config: Config) {\n  if (config.key) {\n    if (config.patterns) {\n      throw new Error('Cannot have key and patterns for the same config');\n    }\n    config.patterns = [config.key];\n    delete config.key;\n  }\n\n  if (config.pattern) {\n    if (config.patterns) {\n      throw new Error('Cannot have pattern and patterns for the same config');\n    }\n    config.patterns = [config.pattern];\n    delete config.pattern;\n  }\n\n  if (config.handler) {\n    if (config.handlers) {\n      throw new Error('Cannot have handler and handlers for the same config');\n    }\n    config.handlers = [config.handler];\n    delete config.handler;\n  }\n\n  if (config.patterns) {\n    config.minimatchPatterns = config.patterns.map(pattern => new Minimatch(pattern));\n  }\n\n  return config;\n}\n\nexport function configure(config) {\n  if (global.__NIGHTINGALE_CONFIG.length !== 0) {\n        // eslint-disable-next-line no-console\n    console.log('nightingale: warning: config overridden');\n  }\n\n  clearCache();\n  global.__NIGHTINGALE_CONFIG = [];\n  global.__NIGHTINGALE_CONFIG_DEFAULT = null;\n\n  config.reverse().forEach(config => {\n    config = handleConfig(config);\n\n    if (config.patterns) {\n      global.__NIGHTINGALE_CONFIG.push(config);\n    } else {\n      if (global.__NIGHTINGALE_CONFIG_DEFAULT) {\n        throw new Error('Config cannot contains more than 1 default declaration');\n      }\n\n      global.__NIGHTINGALE_CONFIG_DEFAULT = config;\n    }\n  });\n\n  if (!global.__NIGHTINGALE_CONFIG_DEFAULT) {\n    global.__NIGHTINGALE_CONFIG_DEFAULT = {\n      handlers: [],\n      processors: [],\n    };\n  }\n}\n\nexport function addConfig(config: Config, unshift = true) {\n  config = handleConfig(config);\n\n  if (!config.patterns) {\n    throw new Error('Config must have `pattern` or `patterns`');\n  }\n\n  clearCache();\n  global.__NIGHTINGALE_CONFIG[unshift ? 'unshift' : 'push'](config);\n}\n\nexport function addGlobalProcessor(processor) {\n  clearCache();\n  global.__NIGHTINGALE_GLOBAL_PROCESSORS.push(processor);\n}\n\nexport function addGlobalHandler(handler) {\n  clearCache();\n  global.__NIGHTINGALE_GLOBAL_HANDLERS.push(handler);\n}\n\nglobal.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER = function (key) {\n  const globalProcessors = global.__NIGHTINGALE_GLOBAL_PROCESSORS;\n  const globalHandlers = global.__NIGHTINGALE_GLOBAL_HANDLERS;\n  const globalCache = global.__NIGHTINGALE_LOGGER_MAP_CACHE;\n\n  if (globalCache.has(key)) {\n    return globalCache.get(key);\n  }\n\n  let value = global.__NIGHTINGALE_CONFIG.find(c => c.minimatchPatterns.some(p => p.match(key)));\n  if (!value) {\n    value = global.__NIGHTINGALE_CONFIG_DEFAULT;\n  }\n\n  let loggerConfig = {\n    patterns: value.patterns,\n    handlers: value.handlers ? globalHandlers.concat(value.handlers) : globalHandlers,\n    processors: value.processors ? globalProcessors.concat(value.processors) : globalProcessors,\n  };\n\n  globalCache.set(key, loggerConfig);\n  return loggerConfig;\n};\n"]}