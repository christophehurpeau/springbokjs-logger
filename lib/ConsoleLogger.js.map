{"version":3,"sources":["../src/ConsoleLogger.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAMe,MAAM,aAAa,0BAAgB;;;;;;;;;;AAU9C,eAAW,CAAC,IAAI,EAAE,QAAQ,EAAE;AACxB,aAAK,CAAC,CACF,6BAAmB,QAAQ,IAAI,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC,CACzD,CAAC,CAAC;;AAEH,YAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAE,IAAI,EAAC,CAAC,CAAC,CAAC,CAAC;KAC/B;CACJ;kBAjBoB,aAAa","file":"ConsoleLogger.js","sourcesContent":["import Logger from './Logger';\nimport ConsoleHandler from './handlers/ConsoleHandler';\n\n/**\n * A simplified way of creating a {@link Logger} with a {@link ConsoleHandler}\n */\nexport default class ConsoleLogger extends Logger {\n\n    /**\n     * Creates a new ConsoleLogger with a prefix.\n     *\n     * If no min level is specified, the min level is ALL if name is in `process.env.DEBUG`, else WARN\n     *\n     * @param {string} name\n     * @param {int} [minLevel]\n     */\n    constructor(name, minLevel) {\n        super([\n            new ConsoleHandler(minLevel != null ? minLevel : name),\n        ]);\n\n        this.setPrefix(`[${name}]`);\n    }\n}\n"]}