{"version":3,"sources":["../src/ConsoleLogger.js"],"names":[],"mappings":";;;;;;;;;;;;;;uBAAmB,UAAU;;;;sCACF,2BAA2B;;;;;;;;;;IAKjC,aAAa;cAAb,aAAa;;;;;;;;;;;AAUnB,aAVM,aAAa,CAUlB,IAAI,EAAE,QAAQ,EAAE;8BAVX,aAAa;;AAW1B,mCAXa,aAAa,6CAWpB,CACF,qCAAmB,QAAQ,IAAI,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC,CACzD,EAAE;;AAEH,YAAI,CAAC,SAAS,OAAK,IAAI,OAAI,CAAC;KAC/B;;WAhBgB,aAAa;;;kBAAb,aAAa","file":"ConsoleLogger.js","sourcesContent":["import Logger from './Logger';\nimport ConsoleHandler from './handlers/ConsoleHandler';\n\n/**\n * A simplified way of creating a {@link Logger} with a {@link ConsoleHandler}\n */\nexport default class ConsoleLogger extends Logger {\n\n    /**\n     * Creates a new ConsoleLogger with a prefix.\n     *\n     * If no min level is specified, the min level is ALL if name is in `process.env.DEBUG`, else WARN\n     *\n     * @param {string} name\n     * @param {int} [minLevel]\n     */\n    constructor(name, minLevel) {\n        super([\n            new ConsoleHandler(minLevel != null ? minLevel : name),\n        ]);\n\n        this.setPrefix(`[${name}]`);\n    }\n}\n"]}