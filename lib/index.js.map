{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"src/index.js","sourcesContent":["/*#if NODE */\nvar util = require('util');\n/*#/if */\n\n/**\n * Abstract Logger\n *\n * @class\n */\nexport class Logger {\n    constructor() {\n        Object.getOwnPropertyNames(Logger.prototype).forEach((key) => {\n            if (key === 'constructor') {\n                return;\n            }\n            this[key] = Logger.prototype[key].bind(this);\n        });\n    }\n\n    /**\n     * Log a message\n     *\n     * @param {String} message\n     * @param {String} logLevel\n     * @return {Logger}\n     */\n    log(message, logLevel) {\n        this.prefix(logLevel).write(message, logLevel).nl(logLevel);\n    }\n\n    /**\n     * Add a new line\n     *\n     * @param {String} logLevel\n     * @return {Logger}\n     */\n    nl(logLevel) {\n        this.write(\"\\n\", logLevel);\n        return this;\n    }\n\n    /**\n     * Set the logger prefix\n     *\n     * @param {String} prefix\n     * @return {Logger}\n     */\n    setPrefix(prefix, color) {\n        if (!color) {\n            color = this.gray;\n        }\n        this._prefix = color(prefix);\n    }\n\n    /**\n     * Write the current prefix, if exists\n     * @see setPrefix\n     *\n     * @param {String} logLevel\n     * @return {Logger}\n     */\n    prefix(logLevel) {\n        this.now(undefined, logLevel);\n        if (this._prefix) {\n            this.write(this._prefix, logLevel);\n        }\n        return this;\n    }\n\n    /**\n     * Write the current time\n     * @see setPrefix\n     *\n     * @param {Function} color\n     * @return {Logger}\n     */\n    now(color, logLevel) {\n        if (!color) {\n            color = this.gray;\n        }\n        this.write(color.bold(new Date().toTimeString().split(' ')[0]\n                                /*new Date().toFormat('HH24:MI:SS')*/)+' ', logLevel);\n        return this;\n    }\n\n    /**\n     * Log an info message\n     *\n     * @param {String} message\n     * @return {Logger}\n     */\n    info(message) {\n        return this.log('→ ' + message);\n    }\n\n    /**\n     * Log an warn message\n     *\n     * @param {String} message\n     * @return {Logger}\n     */\n    warn(message) {\n        return this.log(this.yellow('⚠ ' + message));\n    }\n\n    /**\n     * Log an error message\n     *\n     * @param {String|Error} message\n     * @return {Logger}\n     */\n    error(message) {\n        return this.log(this.red.bold('✖ ' + (message.stack || message.message || message)), 'error');\n    }\n\n    /**\n     * Log an alert message\n     *\n     * @param {String} message\n     * @return {Logger}\n     */\n    alert(message) {\n        return this.log(this.red.bold('! ' + message));\n    }\n\n    /**\n     * Log an fatal message\n     *\n     * @param {String} message\n     * @return {Logger}\n     */\n    fatal(message) {\n        return this.log(this.bgRed.white.bold('‼ ' + message), 'fatal');\n    }\n\n    /**\n     * Log an debug message\n     *\n     * @param {String} message\n     * @return {Logger}\n     */\n    debug(message) {\n        return this.log(this.gray('• ' + message));\n    }\n\n    /**\n     * Log an debug message\n     *\n     * @param {*} value\n     * @return {Logger}\n     */\n    inspect(value) {\n        value = util.inspect(value, { depth: 6 });\n        return this.log(this.gray('• ' + value));\n    }\n\n    /**\n     * Log an debugged var\n     *\n     * @param {String} message\n     * @param {*} varValue\n     * @return {Logger}\n     */\n    inspectVar(varName, varValue){\n        varValue = util.inspect(varValue, { depth: 6 });\n        return this.log(this.cyan('• ' + varName + ' = ' + varValue));\n    }\n\n    /**\n     * Log an sucess message\n     *\n     * @param {String} message\n     * @return {Logger}\n     */\n    success(message) {\n        return this.log(this.green.bold('✔ ' + message));\n    }\n\n    /**\n     * Stores current time in milliseconds\n     * in the timers map\n     *\n     * @param {string} name timer name\n     */\n    time(name) {\n        if (name) {\n            if (!this._timers) {\n                this._timers = {};\n            }\n            this._timers[name] = Date.now();\n        }\n    }\n\n    /**\n    * Finds difference between when this method\n    * was called and when the respective time method\n    * was called, then logs out the difference\n    * and deletes the original record\n    *\n    * @param {string} name timer name\n    */\n    timeEnd(name) {\n        if (this._timers && this._timers[name]) {\n            this.log(name + ': ' + (Date.now() - this._timers[name]) + 'ms');\n            delete this._timers[name];\n        }\n    }\n}\n\nLogger._inject = (object) => {\n    var styles = 'bold italic underline inverse strikethrough'.split(' ');\n    var colors = 'black red green yellow blue magenta cyan white gray'.split(' ');\n    var bgColors = 'bgBlack bgRed bgGreen bgYellow bgBlue bgMagenta bgCyan bgWhite bgGray'.split(' ');\n\n    var injectStyle = (target, styleNames) => {\n        styles.forEach((styleName) => {\n            var styleNames2 = styleNames.slice();\n            styleNames2.push(styleName);\n            target[styleName] = (message) => {\n                return object.style(styleNames2, message);\n            };\n        });\n    };\n    injectStyle(object.prototype, []);\n\n    var injectColor = (target, styleNames) => {\n        colors.forEach((styleName) => {\n            var styleNames2 = styleNames.slice();\n            styleNames2.push(styleName);\n            target[styleName] = (message) => {\n                return object.style(styleNames2, message);\n            };\n        });\n    };\n\n    injectColor(object.prototype, []);\n    colors.forEach((styleName) => {\n        injectStyle(object.prototype[styleName], [styleName]);\n    });\n\n    bgColors.forEach((styleName) => {\n        object.prototype[styleName] = (message) => {\n            return object.style([styleName], message);\n        };\n        injectColor(object.prototype[styleName], [styleName]);\n        injectStyle(object.prototype[styleName], [styleName]);\n        colors.forEach((styleNameColor) => {\n            injectStyle(object.prototype[styleName][styleNameColor], [styleName, styleNameColor]);\n        });\n    });\n};\n\n\n// logger.black.bold('Hello');\n\n//Logger.blue.bold('test');\n"]}