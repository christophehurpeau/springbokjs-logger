{"version":3,"sources":["../src/BrowserConsoleLogger.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;IAMqB,uBAAN,MAAM,oBAAN,0BAA0C;;;;;;;;;AASrD,gBAAY,IAAZ,EAAkB,QAAlB,EAA4B;AACxB,cAAM,CACF,oCAA0B,YAAY,IAAZ,GAAmB,QAAnB,GAA8B,IAA9B,CADxB,CAAN,EADwB;;AAKxB,aAAK,SAAL,CAAe,CAAC,CAAD,GAAI,IAAJ,EAAS,CAAT,CAAf,EALwB;KAA5B;CATW;kBAAM","file":"BrowserConsoleLogger.js","sourcesContent":["import Logger from './Logger';\nimport BrowserConsoleHandler from './handlers/BrowserConsoleHandler';\n\n/**\n * A simplified way of creating a {@link Logger} with a {@link ConsoleHandler}\n */\nexport default class BrowserConsoleLogger extends Logger {\n    /**\n     * Creates a new ConsoleLogger with a prefix.\n     *\n     * If no min level is specified, the min level is ALL if name is in `process.env.DEBUG`, else WARN\n     *\n     * @param {string} name\n     * @param {int} [minLevel]\n     */\n    constructor(name, minLevel) {\n        super([\n            new BrowserConsoleHandler(minLevel != null ? minLevel : name),\n        ]);\n\n        this.setPrefix(`[${name}]`);\n    }\n}\n"]}