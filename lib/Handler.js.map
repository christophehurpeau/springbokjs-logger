{"version":3,"sources":["../src/Handler.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;IAOqB,OAAO,GAAb,MAAM,OAAO,CAAC;;;;;;AAMzB,eAAW,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE;AAClC,YAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;AAErB,yBAAO,OAAO,CAAC,AAAC,KAAK,IAAK;AACtB,gBAAI,KAAK,CAAC,KAAK,GAAG,QAAQ,EAAE;AACxB,oBAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,YAAY,EAAE,CAAC;aACtC;SACJ,CAAC,CAAC;KACN;;;;;AAAA,AAKD,UAAM,CAAC,MAAM,EAAE;AACX,YAAI,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE;AAC9B,mBAAO;SACV;;AAED,cAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC7C,YAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;KAChC;CACJ;kBA7BoB,OAAO","file":"Handler.js","sourcesContent":["import levels from './levels';\n\n/**\n * Abstract class that handles a record.\n *\n * Has a min level to discard record lower that this level.\n */\nexport default class Handler {\n    /**\n     * @param {int} minLevel\n     * @param {Layout} layout\n     * @param {Output} output\n     */\n    constructor(minLevel, layout, output) {\n        this.minLevel = minLevel;\n        this.layout = layout;\n        this.output = output;\n\n        levels.forEach((level) => {\n            if (level.value < minLevel) {\n                this[level.lcKey] = function () {};\n            }\n        });\n    }\n\n    /**\n     * @param {Object} record\n     */\n    handle(record) {\n        if (record.level < this.minLevel) {\n            return;\n        }\n\n        const formatted = this.layout.format(record);\n        this.output.write(formatted);\n    }\n}\n"]}