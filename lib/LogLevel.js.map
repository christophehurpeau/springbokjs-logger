{"version":3,"sources":["../src/LogLevel.js"],"names":[],"mappings":";;;;;;;AAAA,MAAM,QAAQ,GAAG,eAAc;;AAE3B,SAAK,EAAE,EAAE;;AAET,SAAK,EAAE,GAAG;;AAEV,QAAI,EAAE,GAAG;;AAET,QAAI,EAAE,GAAG;;AAET,WAAO,EAAE,GAAG;;AAEZ,SAAK,EAAE,GAAG;;AAEV,YAAQ,EAAE,GAAG;;;AAGb,SAAK,EAAE,GAAG;;AAEV,SAAK,EAAE,GAAG;;AAEV,aAAS,EAAE,GAAG;CACjB,CAAC,CAAC;kBACY,QAAQ","file":"LogLevel.js","sourcesContent":["const LogLevel = Object.freeze({\n    /** @type {Number} Trace information */\n    TRACE: 10,\n    /** @type {Number} Detailed debug information */\n    DEBUG: 100,\n    /** @type {Number} Normal but significant events */\n    INFO: 200,\n    /** @type {Number} Exceptional occurrences that are not errors (Use of deprecated APIs) */\n    WARN: 300,\n    /** @type {Number} Alias for WARN */\n    WARNING: 300,\n    /** @type {Number} Runtime errors that do not require immediate action but should be logged and monitored */\n    ERROR: 400,\n    /** @type {Number} Critical conditions. Example: Application component unavailable, unexpected exception */\n    CRITICAL: 500,\n    /** @type {Number} Action must be taken immediately. Example: Entire website down, database unavailable, etc\n      *                 This should trigger the SMS alerts and wake you up */\n    FATAL: 550,\n    /** @type {Number} Alias for FATAL */\n    ALERT: 550,\n    /** @type {Number} Emergency: system is unusable */\n    EMERGENCY: 600,\n});\nexport default LogLevel;\n"]}