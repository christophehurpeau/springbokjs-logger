{"version":3,"sources":["../../src/formatters/formatterHtml.js"],"names":[],"mappings":";;;;;;;AAAA,MAAM,UAAU,GAAG;;AAEf,QAAI,EAAE,mBAAmB;AACzB,UAAM,EAAE,oBAAoB;AAC5B,aAAS,EAAE,4BAA4B;AACvC,WAAO,EAAE,6CAA6C;AACtD,iBAAa,EAAE,+BAA+B;;AAE9C,SAAK,EAAE,cAAc;AACrB,OAAG,EAAE,YAAY;AACjB,SAAK,EAAE,cAAc;AACrB,UAAM,EAAE,eAAe;AACvB,QAAI,EAAE,gBAAgB;AACtB,WAAO,EAAE,gBAAgB;AACzB,QAAI,EAAE,aAAa;AACnB,SAAK,EAAE,cAAc;AACrB,QAAI,EAAE,aAAa;;AAEnB,WAAO,EAAE,mBAAmB;AAC5B,SAAK,EAAE,iBAAiB;AACxB,WAAO,EAAE,mBAAmB;AAC5B,YAAQ,EAAE,oBAAoB;AAC9B,UAAM,EAAE,kBAAkB;AAC1B,aAAS,EAAE,qBAAqB;AAChC,UAAM,EAAE,kBAAkB;AAC1B,WAAO,EAAE,mBAAmB;CAC/B,CAAC;;;;;AAEK,SAAS,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE;AAClC,QAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE;AAC3B,eAAO,MAAM,CAAC;KACjB;;AAED,WAAO,eAAe,GAAG,MAAM,CAAC,GAAG;8DAAC,UAAS,SAAS,EAAE;AACpD,eAAO,UAAU,CAAC,SAAS,CAAC,CAAC;KAChC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,MAAM,GAAG,SAAS,CAAC;CAC7C;;;;;;;;AAMM,SAAS,MAAM,CAAC,MAAM,EAAE;AAC3B,QAAI,MAAM,GAAG,EAAE,CAAC;AAChB,QAAI,MAAM,CAAC,MAAM,EAAE;AACf,cAAM,IAAI,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;KACjC;;AAED,QAAI,MAAM,CAAC,QAAQ,EAAE;AACjB,cAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,GAAG,CAAC,CAAC;;KAE9E;;AAED,QAAI,MAAM,CAAC,OAAO,EAAE;AAChB,cAAM,IAAI,MAAM,CAAC,OAAO,CAAC;KAC5B;;AAED,QAAI,MAAM,CAAC,OAAO,EAAE;AAChB,cAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAC5C;;AAED,QAAI,MAAM,CAAC,KAAK,EAAE;AACd,cAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KAC1C;;AAED,WAAO,MAAM,CAAC;CACjB","file":"formatterHtml.js","sourcesContent":["const htmlStyles = {\n    // text style\n    bold: 'font-weight: bold',\n    italic: 'font-style: italic',\n    underline: 'text-decoration: underline',\n    inverse: 'unicode-bidi: bidi-override; direction: rtl',\n    strikethrough: 'text-decoration: line-through',\n\n    black: 'color: black',\n    red: 'color: red',\n    green: 'color: green',\n    yellow: 'color: yellow',\n    blue: 'color: #4682B4',\n    magenta: 'color: magenta',\n    cyan: 'color: cyan',\n    white: 'color: white',\n    gray: 'color: gray',\n\n    bgBlack: 'background: black',\n    bgRed: 'background: red',\n    bgGreen: 'background: green',\n    bgYellow: 'background: yellow',\n    bgBlue: 'background: blue',\n    bgMagenta: 'background: magenta',\n    bgCyan: 'background: cyan',\n    bgWhite: 'background: white',\n};\n\nexport function style(styles, string) {\n    if (!styles.length || !string) {\n        return string;\n    }\n\n    return '<span style=\"' + styles.map(function(styleName) {\n        return htmlStyles[styleName];\n    }).join('; ') + '\">' + string + '</span>';\n}\n\n/**\n * @param {Object} record\n * @returns {string}\n */\nexport function format(record) {\n    let string = '';\n    if (record.prefix) {\n        string += record.prefix + ' ';\n    }\n\n    if (record.datetime) {\n        string += this.style('bold', record.datetime.toFormat('HH24:MI:SS') + ' ');\n        /* toTimeString().split(' ')[0] */\n    }\n\n    if (record.message) {\n        string += record.message;\n    }\n\n    if (record.context) {\n        string += JSON.stringify(record.context);\n    }\n\n    if (record.extra) {\n        string += JSON.stringify(record.extra);\n    }\n\n    return string;\n}\n"]}