{"version":3,"sources":["../../src/formatters/formatterBrowserConsole.js"],"names":[],"mappings":"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","file":"formatterBrowserConsole.js","sourcesContent":["import levelToSymbol from './_levelToSymbol';\nimport levelToStyles from './_levelToStyles';\nimport htmlStyles from './_styleToHtmlStyle';\n\nfunction style(styles) {\n    return styles.map(styleName => htmlStyles[styleName]).join('; ');\n}\n\nfunction displayObject(object, contextStyles, args) {\n    const keys = Object.keys(object);\n\n    if (keys.length === 0) {\n        return;\n    }\n\n    args.push(style(['reset', 'gray']));\n    return `%c{ ${keys.map(key => {\n        const styles = contextStyles && contextStyles[key];\n        args.push(style(['reset', 'gray', 'bold']));\n        args.push(style(['reset'].concat(...styles)));\n        args.push(style(['reset', 'gray']));\n\n        return `%c${key}: %c${JSON.stringify(object[key])}%c`;\n    }).join(', ')} }`;\n}\n\n/**\n * @param {Object} record\n * @returns {Object}\n */\nexport function format(record) {\n    let string = '';\n    const args = [];\n\n    if (record.prefix) {\n        string += `%c${record.prefix}`;\n        args.push(style(['gray']));\n    }\n\n    if (record.datetime) {\n        if (string.length !== 0) {\n            string += ' ';\n        }\n\n        args.push(style(['gray', 'bold']));\n        string += `%c${record.datetime.toTimeString().split(' ')[0]}`;\n    }\n\n    let message = record.symbol || levelToSymbol[record.level];\n    let styles = record.styles || levelToStyles[record.level];\n\n    if (record.message) {\n        if (message && message.length !== 0) {\n            message += ` ${record.message}`;\n        } else {\n            message = record.message;\n        }\n    }\n\n    if (styles) {\n        message = `%c${message}`;\n        args.push(style(styles));\n    }\n\n    if (string.length !== 0) {\n        string += ' ';\n    }\n\n    string += message;\n\n    if (record.context) {\n        const stringObject = displayObject(record.context, record.contextStyles, args);\n\n        if (stringObject) {\n            if (string.length !== 0) {\n                string += ' ';\n            }\n\n            string += stringObject;\n        }\n    }\n\n    return [\n        string,\n        ...args,\n    ];\n}\n"]}