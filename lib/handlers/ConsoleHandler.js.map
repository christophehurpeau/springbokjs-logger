{"version":3,"sources":["../../src/handlers/ConsoleHandler.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;IAGY;;;;IACA;;;;;;;;;;;;;;AAEZ,MAAM,cAAc,QAAQ,GAAR,CAAY,KAAZ,IAAqB,QAAQ,GAAR,CAAY,KAAZ,CAAkB,KAAlB,CAAwB,GAAxB,CAArB,IAAqD,EAArD;;IAEC,iBAAN,MAAM,cAAN,2BAAqC;;;;AAIhD,gBAAY,QAAZ,EAAsB;AAClB,YAAI,OAAO,QAAP,KAAoB,QAApB,EAA8B;AAC9B,gBAAI,QAAQ,YAAY,CAAZ,MAAmB,GAAnB,IAA0B,YAAY,OAAZ,CAAoB,QAApB,MAAkC,CAAC,CAAD,CAD1C;AAE9B,gBAAI,CAAC,KAAD,IAAU,SAAS,QAAT,CAAkB,GAAlB,CAAV,EAAkC;AAClC,wBAAQ,YAAY,OAAZ,CAAoB,SAAS,KAAT,CAAe,GAAf,EAAoB,CAApB,CAApB,MAAgD,CAAC,CAAD,CADtB;aAAtC;;AAIA,uBAAW,QAAQ,mBAAS,GAAT,GAAe,mBAAS,IAAT,CANJ;SAAlC;;AASA,cACI,QADJ,EAEI,4BAAkB,aAAlB,CAFJ,EAGI,aAHJ,EAVkB;KAAtB;CAJW;kBAAM","file":"ConsoleHandler.js","sourcesContent":["import Handler from '../Handler';\nimport LogLevel from '../LogLevel';\nimport LayoutDefault from '../layouts/LayoutDefault';\nimport * as formatterANSI from '../formatters/formatterANSI';\nimport * as outputConsole from '../outputs/outputConsole';\n\nconst debugValues = process.env.DEBUG && process.env.DEBUG.split(',') || [];\n\nexport default class ConsoleHandler extends Handler {\n    /**\n     * @param {int|string} minLevel if int, see {@link LogLevel} ; if string, based on process.env.DEBUG\n     */\n    constructor(minLevel) {\n        if (typeof minLevel === 'string') {\n            let debug = debugValues[0] === '*' || debugValues.indexOf(minLevel) !== -1;\n            if (!debug && minLevel.includes('.')) {\n                debug = debugValues.indexOf(minLevel.split('.')[0]) !== -1;\n            }\n\n            minLevel = debug ? LogLevel.ALL : LogLevel.WARN;\n        }\n\n        super(\n            minLevel,\n            new LayoutDefault(formatterANSI),\n            outputConsole\n        );\n    }\n}\n"]}