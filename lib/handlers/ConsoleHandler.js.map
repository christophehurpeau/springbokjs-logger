{"version":3,"sources":["../../src/handlers/ConsoleHandler.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;wBAAoB,YAAY;;;;wBACX,aAAa;;;;oCACR,0BAA0B;;;;uCACrB,6BAA6B;;IAAhD,aAAa;;oCACM,0BAA0B;;IAA7C,aAAa;;AAEzB,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;;;;IAEvD,cAAc;cAAd,cAAc;;;;;;AAIpB,aAJM,cAAc,CAInB,QAAQ,EAAE;8BAJL,cAAc;;AAK3B,YAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AAC9B,gBAAI,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3E,gBAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AAClC,qBAAK,GAAG,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aAC9D;;AAED,oBAAQ,GAAG,KAAK,GAAG,mBAAS,GAAG,GAAG,mBAAS,IAAI,CAAC;SACnD;;AAED,mCAda,cAAc,6CAevB,QAAQ,EACR,mCAAkB,aAAa,CAAC,EAChC,aAAa,EACf;KACL;;WAnBgB,cAAc;;;kBAAd,cAAc","file":"ConsoleHandler.js","sourcesContent":["import Handler from '../Handler';\nimport LogLevel from '../LogLevel';\nimport LayoutDefault from '../layouts/LayoutDefault';\nimport * as formatterANSI from '../formatters/formatterANSI';\nimport * as outputConsole from '../outputs/outputConsole';\n\nconst debugValues = process.env.DEBUG && process.env.DEBUG.split(',') || [];\n\nexport default class ConsoleHandler extends Handler {\n    /**\n     * @param {int|string} minLevel if int, see {@link LogLevel} ; if string, based on process.env.DEBUG\n     */\n    constructor(minLevel) {\n        if (typeof minLevel === 'string') {\n            let debug = debugValues[0] === '*' || debugValues.indexOf(minLevel) !== -1;\n            if (!debug && minLevel.includes('.')) {\n                debug = debugValues.indexOf(minLevel.split('.')[0]) !== -1;\n            }\n\n            minLevel = debug ? LogLevel.ALL : LogLevel.WARN;\n        }\n\n        super(\n            minLevel,\n            new LayoutDefault(formatterANSI),\n            outputConsole\n        );\n    }\n}\n"]}