{"version":3,"sources":["../../src/config.js"],"names":[],"mappings":";;;;;QAQgB,S,GAAA,S;QAmBA,Y,GAAA,Y;;AA3BhB;;AAEA,IAAI,CAAC,OAAO,oBAAZ,EAAkC;AAC9B,WAAO,oBAAP,GAA8B,EAA9B;AACA,WAAO,wBAAP,GAAkC,IAAI,GAAJ,EAAlC;AACA,WAAO,4BAAP,GAAsC,IAAtC;AACH;;;;;EAEM,SAAS,SAAT,CAAmB,MAAnB,EAA2B;AAC9B,WAAO,wBAAP,CAAgC,KAAhC;AACA,WAAO,oBAAP,GAA8B,EAA9B;AACA,WAAO,4BAAP,GAAsC,IAAtC;;AAEA,WAAO,OAAP,GAAiB,OAAjB,CAAyB,aAAK;AAC1B,YAAI,EAAE,QAAN,EAAgB;AACZ,cAAE,iBAAF,GAAsB,EAAE,QAAF,CAAW,GAAX,CAAe;AAAA,uBAAW,yBAAc,OAAd,CAAX;AAAA,aAAf,CAAtB;AACA,mBAAO,oBAAP,CAA4B,IAA5B,CAAiC,CAAjC;AACH,SAHD,MAGO;AACH,gBAAI,OAAO,4BAAX,EAAyC;AACrC,sBAAM,IAAI,KAAJ,CAAU,wDAAV,CAAN;AACH;;AAED,mBAAO,4BAAP,GAAsC,CAAtC;AACH;AACJ,KAXD;AAYH;;;;;EAEM,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AAC9B,QAAI,OAAO,wBAAP,CAAgC,GAAhC,CAAoC,GAApC,CAAJ,EAA8C;AAC1C,eAAO,OAAO,wBAAP,CAAgC,GAAhC,CAAoC,GAApC,CAAP;AACH;;AAED,QAAI,QAAQ,OAAO,oBAAP,CAA4B,IAA5B,CAAiC;AAAA,eAAK,EAAE,iBAAF,CAAoB,IAApB,CAAyB;AAAA,mBAAK,EAAE,KAAF,CAAQ,GAAR,CAAL;AAAA,SAAzB,CAAL;AAAA,KAAjC,CAAZ;AACA,QAAI,CAAC,KAAL,EAAY;AACR,gBAAQ,OAAO,4BAAf;AACH;;AAED,WAAO,wBAAP,CAAgC,GAAhC,CAAoC,GAApC,EAAyC,KAAzC;;AAEA,WAAO,KAAP;AACH","file":"config.js","sourcesContent":["import { Minimatch } from 'minimatch';\n\nif (!global.__NIGHTINGALE_CONFIG) {\n    global.__NIGHTINGALE_CONFIG = [];\n    global.__NIGHTINGALE_LOGGER_MAP = new Map();\n    global.__NIGHTINGALE_CONFIG_DEFAULT = null;\n}\n\nexport function configure(config) {\n    global.__NIGHTINGALE_LOGGER_MAP.clear();\n    global.__NIGHTINGALE_CONFIG = [];\n    global.__NIGHTINGALE_CONFIG_DEFAULT = null;\n\n    config.reverse().forEach(c => {\n        if (c.patterns) {\n            c.minimatchPatterns = c.patterns.map(pattern => new Minimatch(pattern));\n            global.__NIGHTINGALE_CONFIG.push(c);\n        } else {\n            if (global.__NIGHTINGALE_CONFIG_DEFAULT) {\n                throw new Error('Config cannot contains more than 1 default declaration');\n            }\n\n            global.__NIGHTINGALE_CONFIG_DEFAULT = c;\n        }\n    });\n}\n\nexport function getForLogger(key) {\n    if (global.__NIGHTINGALE_LOGGER_MAP.has(key)) {\n        return global.__NIGHTINGALE_LOGGER_MAP.get(key);\n    }\n\n    let value = global.__NIGHTINGALE_CONFIG.find(c => c.minimatchPatterns.some(p => p.match(key)));\n    if (!value) {\n        value = global.__NIGHTINGALE_CONFIG_DEFAULT;\n    }\n\n    global.__NIGHTINGALE_LOGGER_MAP.set(key, value);\n\n    return value;\n}\n"]}