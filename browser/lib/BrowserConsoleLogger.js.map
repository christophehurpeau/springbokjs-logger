{"version":3,"sources":["../../src/BrowserConsoleLogger.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMqB;;;;;;;;;;;;;;;;AASjB,aATiB,oBASjB,CAAY,IAAZ,EAAkB,eAAlB,EAAmC;8BATlB,sBASkB;;2EATlB,iCAUP,CACF,oCAA0B,eAA1B,EAA2C,IAA3C,CADE,IADyB;;AAK/B,YAAI,IAAJ,EAAU;AACN,kBAAK,SAAL,OAAmB,UAAnB,EADM;SAAV;qBAL+B;KAAnC;;WATiB","file":"BrowserConsoleLogger.js","sourcesContent":["import Logger from './Logger';\nimport BrowserConsoleHandler from './handlers/BrowserConsoleHandler';\n\n/**\n * A simplified way of creating a {@link Logger} with a {@link ConsoleHandler}\n */\nexport default class BrowserConsoleLogger extends Logger {\n    /**\n     * Creates a new ConsoleLogger with a prefix.\n     *\n     * the min level is ALL if name is in `process.env.DEBUG`\n     *\n     * @param {string} name\n     * @param {int} [defaultMinLevel] default is WARN\n     */\n    constructor(name, defaultMinLevel) {\n        super([\n            new BrowserConsoleHandler(defaultMinLevel, name),\n        ]);\n\n        if (name) {\n            this.setPrefix(`[${name}]`);\n        }\n    }\n}\n"]}