{"version":3,"sources":["../../src/BrowserConsoleLogger.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;IAMqB,aAAa;cAAb,aAAa;;;;;;;;;;;AAU9B,aAViB,aAAa,CAUlB,IAAI,EAAE,QAAQ,EAAE;8BAVX,aAAa;;2EAAb,aAAa,aAWpB,CACF,oCAA0B,QAAQ,IAAI,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC,CAChE;;AAED,cAAK,SAAS,OAAK,IAAI,OAAI,CAAC;;KAC/B;;WAhBgB,aAAa;;;kBAAb,aAAa","file":"BrowserConsoleLogger.js","sourcesContent":["import Logger from './Logger';\nimport BrowserConsoleHandler from './handlers/BrowserConsoleHandler';\n\n/**\n * A simplified way of creating a {@link Logger} with a {@link ConsoleHandler}\n */\nexport default class ConsoleLogger extends Logger {\n\n    /**\n     * Creates a new ConsoleLogger with a prefix.\n     *\n     * If no min level is specified, the min level is ALL if name is in `process.env.DEBUG`, else WARN\n     *\n     * @param {string} name\n     * @param {int} [minLevel]\n     */\n    constructor(name, minLevel) {\n        super([\n            new BrowserConsoleHandler(minLevel != null ? minLevel : name),\n        ]);\n\n        this.setPrefix(`[${name}]`);\n    }\n}\n"]}