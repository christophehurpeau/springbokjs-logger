{"version":3,"sources":["../../../src/formatters/formatterANSI.js"],"names":[],"mappings":"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","file":"formatterANSI.js","sourcesContent":["import ansi from 'ansi-styles';\nimport levelToSymbol from './_levelToSymbol';\nimport levelToStyles from './_levelToStyles';\n\nexport function style(styles, string) {\n    if (!styles || !styles.length || !string) {\n        return string;\n    }\n\n    return styles.reduce((string, styleName) => {\n        let style = ansi[styleName];\n\n        if (!style) {\n            throw new Error(`Unknown style: ${styleName}`);\n        }\n\n        return style.open + string + style.close;\n    }, string);\n}\n\nfunction displayObject(object, contextStyles) {\n    const keys = Object.keys(object);\n\n    if (keys.length === 0) {\n        return;\n    }\n\n    return `{ ${keys.map(key => {\n        return `${key}: ${this.style(contextStyles && contextStyles[key], JSON.stringify(object[key]))}`;\n    }).join(', ')} }`;\n}\n\n/**\n * @param {Object} record\n * @returns {string}\n */\nexport function format(record) {\n    let string = '';\n    if (record.prefix) {\n        string += this.style(['gray'], record.prefix);\n    }\n\n    if (record.datetime) {\n        if (string.length !== 0) {\n            string += ' ';\n        }\n\n        string += this.style(['gray', 'bold'], record.datetime.toTimeString().split(' ')[0]);\n        /* new Date().toFormat('HH24:MI:SS') */\n    }\n\n    let message = record.symbol || levelToSymbol[record.level];\n    let styles = record.styles || levelToStyles[record.level];\n\n    if (record.message) {\n        if (message && message.length !== 0) {\n            message += ` ${record.message}`;\n        } else {\n            message = record.message;\n        }\n    }\n\n    if (styles) {\n        message = this.style(styles, message);\n    }\n\n    if (string.length !== 0) {\n        string += ' ';\n    }\n\n    string += message;\n\n    if (record.context) {\n        const stringObject = displayObject.call(this, record.context, record.contextStyles);\n\n        if (stringObject) {\n            if (string.length !== 0) {\n                string += ' ';\n            }\n\n            string += stringObject;\n        }\n    }\n\n    if (record.extra) {\n        const stringObject = displayObject.call(this, record.extra);\n\n        if (stringObject) {\n            if (string.length !== 0) {\n                string += ' ';\n            }\n\n            string += stringObject;\n        }\n    }\n\n    return string;\n}\n\n"]}