{"version":3,"sources":["../../../src/handlers/ConsoleHandler.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;IAGY;;;;IACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEZ,IAAM,cAAc,QAAQ,GAAR,CAAY,KAAZ,IAAqB,QAAQ,GAAR,CAAY,KAAZ,CAAkB,KAAlB,CAAwB,GAAxB,CAArB,IAAqD,EAArD;;IAEC;;;;;;;;;;;;AAKjB,aALiB,cAKjB,CAAY,QAAZ,EAAsB,IAAtB,EAA4B;8BALX,gBAKW;;AACxB,YAAI,QAAQ,aAAa,mBAAS,GAAT,EAAc;AACnC,gBAAI,QAAQ,YAAY,CAAZ,MAAmB,GAAnB,IAA0B,YAAY,OAAZ,CAAoB,IAApB,MAA8B,CAAC,CAAD,CADjC;AAEnC,gBAAI,CAAC,KAAD,IAAU,KAAK,QAAL,CAAc,GAAd,CAAV,EAA8B;AAC9B,wBAAQ,YAAY,OAAZ,CAAoB,KAAK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAApB,MAA4C,CAAC,CAAD,CADtB;aAAlC;;AAIA,uBAAW,QAAQ,mBAAS,GAAT,GAAgB,YAAY,mBAAS,IAAT,CANZ;SAAvC;;sEANa,2BAgBT,UACA,4BAAkB,aAAlB,GACA,gBAboB;KAA5B;;WALiB","file":"ConsoleHandler.js","sourcesContent":["import Handler from '../Handler';\nimport LogLevel from '../LogLevel';\nimport LayoutDefault from '../layouts/LayoutDefault';\nimport * as formatterANSI from '../formatters/formatterANSI';\nimport * as outputConsole from '../outputs/outputConsole';\n\nconst debugValues = process.env.DEBUG && process.env.DEBUG.split(',') || [];\n\nexport default class ConsoleHandler extends Handler {\n    /**\n     * @param {int} minLevel see {@link LogLevel}\n     * @param {string} [name] based on process.env.DEBUG to determine the minimum level displayed\n     */\n    constructor(minLevel, name) {\n        if (name && minLevel !== LogLevel.ALL) {\n            let debug = debugValues[0] === '*' || debugValues.indexOf(name) !== -1;\n            if (!debug && name.includes('.')) {\n                debug = debugValues.indexOf(name.split('.')[0]) !== -1;\n            }\n\n            minLevel = debug ? LogLevel.ALL : (minLevel || LogLevel.WARN);\n        }\n\n        super(\n            minLevel,\n            new LayoutDefault(formatterANSI),\n            outputConsole\n        );\n    }\n}\n"]}