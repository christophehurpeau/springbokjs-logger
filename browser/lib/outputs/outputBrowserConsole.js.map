{"version":3,"sources":["../../../src/outputs/outputBrowserConsole.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGO,IAAM,wBAAQ,YAAO;AACxB,QAAI,QAAQ,KAAR,EAAe;AACf;;;;iBAAO,SAAS,KAAT,CAAe,MAAf,EAAuB,QAAvB,EAAiC;AACpC,oBAAM,MAAM,QAAQ,YAAY,mBAAS,KAAT,GAAiB,OAA7B,GAAuC,KAAvC,CAAR,CAAsD,IAAtD,CAA2D,OAA3D,CAAN,CAD8B;AAEpC,wDAAO,OAAP,EAFoC;aAAjC;UADQ;KAAnB,MAKO;AACH;;;;iBAAO,SAAS,KAAT,CAAe,MAAf,EAAuB,QAAvB,EAAiC;AACpC,oBAAM,MAAM,QAAQ,GAAR,CAAY,IAAZ,CAAiB,OAAjB,CAAN,CAD8B;AAEpC,wDAAO,OAAP,EAFoC;aAAjC;UADJ;KALP;CADkB,EAAT","file":"outputBrowserConsole.js","sourcesContent":["/* eslint no-console: 0 */\nimport LogLevel from '../LogLevel';\n\nexport const write = (() => {\n    if (console.error) {\n        return function write(params, logLevel) {\n            const log = console[logLevel >= LogLevel.ERROR ? 'error' : 'log'].bind(console);\n            log(...params);\n        };\n    } else {\n        return function write(params, logLevel) {\n            const log = console.log.bind(console);\n            log(...params);\n        };\n    }\n})();\n"]}