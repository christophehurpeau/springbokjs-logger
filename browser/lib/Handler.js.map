{"version":3,"sources":["../../src/Handler.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOqB;;;;;;;;;;AAMjB,aANiB,OAMjB,CAAY,QAAZ,EAAsB,MAAtB,EAA8B,MAA9B,EAAsC;;;8BANrB,SAMqB;;AAClC,aAAK,QAAL,GAAgB,QAAhB,CADkC;AAElC,aAAK,MAAL,GAAc,MAAd,CAFkC;AAGlC,aAAK,MAAL,GAAc,MAAd,CAHkC;;AAKlC,yBAAO,OAAP,CAAe,UAAC,KAAD,EAAW;AACtB,gBAAI,MAAM,KAAN,GAAc,QAAd,EAAwB;AACxB,sBAAK,MAAM,KAAN,CAAL;;uCAAoB,YAAY,EAAZ,CADI;aAA5B;SADW,CAAf,CALkC;KAAtC;;;;;;iBANiB;;;;;iCAqBV,QAAQ;AACX,gBAAI,OAAO,KAAP,GAAe,KAAK,QAAL,EAAe;AAC9B,uBAD8B;aAAlC;;AAIA,gBAAM,YAAY,KAAK,MAAL,CAAY,MAAZ,CAAmB,MAAnB,CAAZ,CALK;AAMX,iBAAK,MAAL,CAAY,KAAZ,CAAkB,SAAlB,EANW;;;;WArBE","file":"Handler.js","sourcesContent":["import levels from './levels';\n\n/**\n * Abstract class that handles a record.\n *\n * Has a min level to discard record lower that this level.\n */\nexport default class Handler {\n    /**\n     * @param {int} minLevel\n     * @param {Layout} layout\n     * @param {Output} output\n     */\n    constructor(minLevel, layout, output) {\n        this.minLevel = minLevel;\n        this.layout = layout;\n        this.output = output;\n\n        levels.forEach((level) => {\n            if (level.value < minLevel) {\n                this[level.lcKey] = function () {};\n            }\n        });\n    }\n\n    /**\n     * @param {Object} record\n     */\n    handle(record) {\n        if (record.level < this.minLevel) {\n            return;\n        }\n\n        const formatted = this.layout.format(record);\n        this.output.write(formatted);\n    }\n}\n"]}