{"version":3,"sources":["../src/config.js"],"names":[],"mappings":"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","file":"config.js","sourcesContent":["import { Minimatch } from 'minimatch';\n\nif (!global.__NIGHTINGALE_CONFIG) {\n    global.__NIGHTINGALE_CONFIG = [];\n    global.__NIGHTINGALE_GLOBAL_PROCESSORS = [];\n    global.__NIGHTINGALE_GLOBAL_HANDLERS = [];\n    global.__NIGHTINGALE_LOGGER_MAP_CACHE = new Map();\n    global.__NIGHTINGALE_CONFIG_DEFAULT = {\n        handlers: [],\n        processors: [],\n    };\n}\n\nfunction clearCache() {\n    global.__NIGHTINGALE_LOGGER_MAP_CACHE.clear();\n}\n\nexport function configure(config) {\n    global.__NIGHTINGALE_CONFIG = [];\n    global.__NIGHTINGALE_CONFIG_DEFAULT = null;\n\n    config.reverse().forEach(c => {\n        if (c.pattern) {\n            if (c.patterns) {\n                throw new Error('Cannot have pattern and patterns for the same config');\n            }\n            c.patterns = [c.pattern];\n            delete c.pattern;\n        }\n\n        if (c.handler) {\n            if (c.handlers) {\n                throw new Error('Cannot have handler and handlers for the same config');\n            }\n            c.handlers = [c.handler];\n            delete c.handler;\n        }\n\n        if (c.patterns) {\n            c.minimatchPatterns = c.patterns.map(pattern => new Minimatch(pattern));\n            global.__NIGHTINGALE_CONFIG.push(c);\n        } else {\n            if (global.__NIGHTINGALE_CONFIG_DEFAULT) {\n                throw new Error('Config cannot contains more than 1 default declaration');\n            }\n\n            global.__NIGHTINGALE_CONFIG_DEFAULT = c;\n        }\n    });\n\n    if (!global.__NIGHTINGALE_CONFIG_DEFAULT) {\n        global.__NIGHTINGALE_CONFIG_DEFAULT = {\n            handlers: [],\n            processors: [],\n        };\n    }\n}\n\nexport function addGlobalProcessor(processor) {\n    clearCache();\n    global.__NIGHTINGALE_GLOBAL_PROCESSORS.push(processor);\n}\n\nexport function addGlobalHandler(handler) {\n    clearCache();\n    global.__NIGHTINGALE_GLOBAL_HANDLERS.push(handler);\n}\n\nglobal.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER = function (key) {\n    const globalProcessors = global.__NIGHTINGALE_GLOBAL_PROCESSORS;\n    const globalHandlers = global.__NIGHTINGALE_GLOBAL_HANDLERS;\n    const globalCache = global.__NIGHTINGALE_LOGGER_MAP_CACHE;\n\n    if (globalCache.has(key)) {\n        return globalCache.get(key);\n    }\n\n    let value = global.__NIGHTINGALE_CONFIG.find(c => c.minimatchPatterns.some(p => p.match(key)));\n    if (!value) {\n        value = global.__NIGHTINGALE_CONFIG_DEFAULT;\n    }\n\n    let loggerConfig = {\n        patterns: value.patterns,\n        handlers: value.handlers ? globalHandlers.concat(value.handlers) : globalHandlers,\n        processors: value.processors ? globalProcessors.concat(value.processors) : globalProcessors,\n    };\n\n    globalCache.set(key, loggerConfig);\n    return loggerConfig;\n};\n"]}