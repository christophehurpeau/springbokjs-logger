{"version":3,"sources":["../src/index.js"],"names":["Logger","configure","addConfig","levels","listenUnhandledErrors","logger","process","on","error","err"],"mappings":"AAAA,OAAOA,MAAP;;;AAEA,eAAeA,MAAf;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,UAArC;oBACmB,oB;oBAAZC,M;;AAEP;;;;;AAIA,OAAO,SAASC,qBAAT,CAA+BC,MAA/B,EAAgD;AAAA,oBAAX,WAAG,aAAH,CAAW;;AAAA;;AACrD,MAAI,CAACA,MAAL,EAAaA,4BAAS,IAAIL,MAAJ,CAAW,mCAAX,EAAgD,uBAAhD,CAAT;AACbM,UAAQC,EAAR,CAAW,mBAAX,EAAgC;AAAA,WAAOF,OAAOG,KAAP,CAAa,mBAAb,EAAkC,EAAEC,GAAF,EAAlC,CAAP;AAAA,GAAhC;AACAH,UAAQC,EAAR,CAAW,oBAAX,EAAiC;AAAA,WAAOF,OAAOG,KAAP,CAAa,oBAAb,EAAmC,EAAEC,GAAF,EAAnC,CAAP;AAAA,GAAjC;AACD","file":"index.js","sourcesContent":["import Logger from 'nightingale-logger/src';\n\nexport default Logger;\nexport { configure, addConfig } from './config';\nexport levels from 'nightingale-levels';\n\n/**\n * listen to uncaughtException and unhandledRejection\n * @param {Logger} [logger]\n */\nexport function listenUnhandledErrors(logger: ?Logger) {\n  if (!logger) logger = new Logger('nightingale.listenUnhandledErrors', 'listenUnhandledErrors');\n  process.on('uncaughtException', err => logger.error('uncaughtException', { err }));\n  process.on('unhandledRejection', err => logger.error('unhandledRejection', { err }));\n}\n"]}